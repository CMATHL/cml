include(CheckCXXCompilerFlag)

if("${CMAKE_C_COMPILER}" MATCHES "clang$" OR "${CMAKE_C_COMPILER_ID}" STREQUAL "Clang")
	SET(CMAKE_COMPILER_IS_CLANG 1)
endif()

if("${CMAKE_C_COMPILER}" MATCHES "gcc$" OR "${CMAKE_C_COMPILER_ID}" STREQUAL "GNU")
	SET(CMAKE_COMPILER_IS_GNUC 1)
endif()

if(CMAKE_COMPILER_IS_GNUC OR CMAKE_COMPILER_IS_CLANG)
	FIND_LIBRARY(LIBM m)

	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Ofast")
endif()

if(CMAKE_COMPILER_IS_GNUC)
	if(CMAKE_C_COMPILER_VERSION VERSION_GREATER "5.3.0" AND NOT APPLE)
		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
	endif()
endif()

OPTION(CML_DOUBLE_PRECISION "Use double precision floating point values" BOOL:FALSE)
IF(CML_DOUBLE_PRECISION)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DCML_DOUBLE_PRECISION=${CML_DOUBLE_PRECISION}")
	MESSAGE(STATUS "Using double-precision floating point values")
ELSE()
	MESSAGE(STATUS "Using single-precision floating point values")
ENDIF()

IF(CML_NO_ALIASES)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DCML_NO_ALIASES=${CML_NO_ALIASES}")
ENDIF()

IF(CML_NO_EASING_FUNCTIONS)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DCML_NO_EASING_FUNCTIONS=${CML_NO_EASING_FUNCTIONS}")
ENDIF()

IF(CML_NO_STDBOOL)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DCML_NO_STDBOOL=${CML_NO_STDBOOL}")
ENDIF()

IF(CML_NO_STDINT)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DCML_NO_STDINT=${CML_NO_STDINT}")
ENDIF()

IF(mint_t)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Dmint_t=${mint_t}")
ENDIF()

IF(mfloat_t)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Dmfloat_t=${mfloat_t}")
ENDIF()
